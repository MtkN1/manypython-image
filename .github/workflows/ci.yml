name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
env:
  BASE_IMAGE: buildpack-deps
  VARIANT: noble
  OUTPUT_IAMGE: mtkn1.ghcr.io/manypython-image
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9.20"
          - "3.10.15"
          - "3.11.10"
          - "3.12.7"
          - "3.13.0"
      fail-fast: false
    steps:
      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            VARIANT=${{ env.VARIANT }}
            PYTHON_VERSION=${{ matrix.python-version }}
          file: Dockerfile.build
          outputs: type=tar,dest=rootfs-${{ matrix.python-version }}.tar # FIXME: It should be type=local, but that doesn't finish exporting

      - name: Create rootfs tarball
        run: |
          mkdir "rootfs-$PYTHON_VERSION"
          tar -C "rootfs-$PYTHON_VERSION" -xf "rootfs-$PYTHON_VERSION.tar" usr/local # Temporary extraction (due to type=tar)
          tar -C "rootfs-$PYTHON_VERSION" -cf "rootfs-$PYTHON_VERSION.tar" usr/local
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - uses: actions/upload-artifact@v4
        with:
          name: rootfs-${{ matrix.python-version }}
          path: rootfs-${{ matrix.python-version }}.tar

  image:
    needs: build
    runs-on: ubuntu-latesit
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: rootfs-*
          merge-multiple: true

      - name: Combine rootfs
        run: |
          for rootfs_tar in rootfs-*.tar; do
            rootfs_dir=$(basename $rootfs_tar .tar)
            mkdir "$rootfs_dir"
            tar -C "$rootfs_dir" -xf "$rootfs_tar"
            tar -C "$rootfs_dir" -rf rootfs.tar usr/local
          done

      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            VARIANT=${{ env.VARIANT }}
          file: Dockerfile.final
          outputs: type=docker,dest=manypython-image.tar
          tags: |
            ${{ env.OUTPUT_IAMGE }}:${{ github.sha }}
            ${{ env.OUTPUT_IAMGE }}:${{ env.VARIANT }}
            ${{ env.OUTPUT_IAMGE }}:latest

      - uses: actions/upload-artifact@v4
        with:
          name: manypython-image
          path: manypython-image.tar

  build-dev:
    needs: image
    runs-on: ubuntu-latest
    if: false # TODO: build dev container
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: manypython-image

      - name: Load image
        run: docker load --input manypython-image.tar

      - run: npm install -g @devcontainers/cli

      - run: devcontainer build --image-name "manypython-dev:$VARIANT" --workspace-folder .

      - name: Save image
        run: docker save --output manypython-dev.tar "manypython-dev:$VARIANT"

      - uses: actions/upload-artifact@v4
        with:
          name: manypython-dev
          path: manypython-dev.tar
