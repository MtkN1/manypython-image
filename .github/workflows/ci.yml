name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
env:
  BASE_IMAGE: buildpack-deps
  VARIANT: noble
  REGISTRY: ghcr.io
  OUTPUT_IMAGE: manypython-image
  DEVCONTAINER_IMAGE: manypython-dev
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.9.20"
          - "3.10.15"
          - "3.11.10"
          - "3.12.7"
          - "3.13.0"
      fail-fast: false
    steps:
      - uses: docker/setup-buildx-action@v3

      - uses: docker/build-push-action@v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            VARIANT=${{ env.VARIANT }}
            PYTHON_VERSION=${{ matrix.python-version }}
          outputs: type=tar,dest=rootfs-${{ matrix.python-version }}.tar # FIXME: It should be type=local, but that doesn't finish exporting
          target: build

      - name: Create rootfs tarball
        run: |
          mkdir "rootfs-$PYTHON_VERSION"
          tar -C "rootfs-$PYTHON_VERSION" -xf "rootfs-$PYTHON_VERSION.tar" usr/local # Temporary extraction (due to type=tar)
          tar -C "rootfs-$PYTHON_VERSION" -cf "rootfs-$PYTHON_VERSION.tar" usr/local
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}

      - uses: actions/upload-artifact@v4
        with:
          name: rootfs-${{ matrix.python-version }}
          path: rootfs-${{ matrix.python-version }}.tar

  runtime:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: rootfs-*
          merge-multiple: true

      - name: Combine rootfs
        run: |
          for rootfs_tar in rootfs-*.tar; do
            rootfs_dir=$(basename $rootfs_tar .tar)
            mkdir "$rootfs_dir"
            tar -C "$rootfs_dir" -xf "$rootfs_tar"
            tar -C "$rootfs_dir" -rf rootfs.tar usr/local
          done

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            VARIANT=${{ env.VARIANT }}
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.OUTPUT_IMAGE }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.OUTPUT_IMAGE }}:${{ env.VARIANT }}
            ${{ env.REGISTRY }}/${{ env.OUTPUT_IMAGE }}:latest
          target: runtime

      - name: Build and push Dev Container image
        run: |
          npm install -g @devcontainers/cli
          devcontainer build --image-name "$REGISTRY/$DEVCONTAINER_IMAGE:$VARIANT" --push $push_flag --workspace-folder .
        env:
          push_flag: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
